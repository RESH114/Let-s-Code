/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public TreeNode findSuccessor(TreeNode root,int key){
    if(root == null){
      return null;
    }
    Queue<Treenode> queue = new LinkedList<>();
    queue.offer(root);
    while(!queue.isEmpty()){
      int level = queue.size();
        TreeNode node = queue.poll();
        if(node.left!=null)
          queue.offer(node.left);
        if(node.right!=null)
          queue.offer(node.right);
        if(node.val == key)
          break;     
    }
    return queue.peek();
}

class MyLinkedList {
    private class Node{
        int val;
        Node next;
        Node prev;
        Node(int val){
            this.val = val;
        }
    }
    Node head;
    Node tail;
    int length=0;

    public MyLinkedList() {
        
    }
    
    public int get(int index) {
        if(index >= length) return -1;
        Node temp = head;
        while(index-- >0){
            temp = temp.next;
            if(temp == null) return -1;
        }
        return temp.val;
    }
    
    public void addAtHead(int val) {
        Node temp = new Node(val);
        if(length == 0){
            head = temp;
            tail = temp;
        }else{
            temp.next = head;
            head.prev = temp;
            head = temp;
        }
        length++;
    }
    
    public void addAtTail(int val) {
        Node temp = new Node(val);
        if(length == 0){
            head = temp;
            tail = temp;
        }else{
            tail.next = temp;
            temp.prev = tail;
            tail = temp;
        }
        length++;
    }
    
    public void addAtIndex(int index, int val) {
        if(index > length) return;
        if(index == 0){
            addAtHead(val);
            return;
        }
        if(index == length){
            addAtTail(val);
            return;
        }
        Node node = new Node(val);
        Node temp = head;
        while(index-- > 0){
            temp = temp.next;
        }
        node.prev = temp.prev;
        node.next = temp;
        temp.prev.next = node;
        temp.prev = node;
        length++;
    }
    
    public void deleteAtIndex(int index) {
    if (index >= length || index < 0) return;

    if (index == 0) {
        head = head.next;
        if (head != null) {
            head.prev = null;
        }
    } else if (index == length - 1) {
        tail = tail.prev;
        if (tail != null) {
            tail.next = null;
        }
    } else {
        Node node = head;
        while (index-- > 0) {
            node = node.next;
            if (node == null) return;
        }
        node.prev.next = node.next;
        node.next.prev = node.prev;
    }

    length--;
}

}

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList obj = new MyLinkedList();
 * int param_1 = obj.get(index);
 * obj.addAtHead(val);
 * obj.addAtTail(val);
 * obj.addAtIndex(index,val);
 * obj.deleteAtIndex(index);
 */

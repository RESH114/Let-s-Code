/*
Input: head = [1,2,2,1]
Output: true
*/
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        ListNode middle = middleNode(head);
        ListNode rev = reverse(middle);
        while(head != null && rev != null){
            if( head.val != rev.val)
                return false;
            head = head.next;
            rev = rev.next;
        }
        return true;
    }
    public ListNode middleNode(ListNode node){
        ListNode slow = node,fast = node;
        while(fast!=null && fast.next!=null){
            fast = fast.next.next;
            slow = slow.next;
        }
        return slow;
    }
    public ListNode reverse(ListNode node){
        ListNode prev = null;
        ListNode current = node;
        while(current!=null){
            ListNode next = current.next;
            current.next = prev;
            prev = current;
            current = next;
        }
        return prev;
    }
}

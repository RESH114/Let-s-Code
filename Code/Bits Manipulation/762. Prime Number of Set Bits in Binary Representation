/*
Example 1:
Input: left = 6, right = 10
Output: 4
Explanation:
6  -> 110 (2 set bits, 2 is prime)
7  -> 111 (3 set bits, 3 is prime)
8  -> 1000 (1 set bit, 1 is not prime)
9  -> 1001 (2 set bits, 2 is prime)
10 -> 1010 (2 set bits, 2 is prime)
4 numbers have a prime number of set bits.
*/
class Solution {
    public int countPrimeSetBits(int left, int right) {
        int arr[]={2,3,5,7,11,13,17,19};
        HashMap<Integer,Integer> prime = new HashMap<>();
        for(int i:arr){
            prime.put(i,1);
        }
        int result=0,count=0;
        for(int i=left;i<=right;i++){
            count = Integer.bitCount(i);
            if(prime.containsKey(count)){
                result++;
            }
        }
        return result;
    }
}

/*
Input: ‘n’ = 7 ‘k’ = 3
‘a’ = [1, 2, 3, 1, 1, 1, 1]

Output: 3

Explanation: Subarrays whose sum = ‘3’ are:

[1, 2], [3], [1, 1, 1] and [1, 1, 1]

Here, the length of the longest subarray is 3, which is our final answer.
*/
public class Solution {
    public static int longestSubarrayWithSumK(int []a, long k) {
        // Write your code here
        int max = Integer.MIN_VALUE;
        int sum=0;
        int s=0;
        for(int i=0;i<a.length;i++){
            sum += a[i];
            if(sum > k){
                sum -= a[s];
                s++;
            }
            if(sum == k){
                max = Math.max(max,i-s+1);
            }
        }
        return max;
    }
}

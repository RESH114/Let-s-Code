import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] arr = {-3, 2, -1, 4, -5};
        System.out.println("Original Array: " + Arrays.toString(arr));
        partitionNegativePositive(arr);
        System.out.println("Partitioned Array: " + Arrays.toString(arr));
    }

    public static void partitionNegativePositive(int[] arr) {
        int left = 0;
        int right = arr.length - 1;

        while (left <= right) {
            // Move left pointer to find a positive number
            while (left <= right && arr[left] < 0) {
                left++;
            }

            // Move right pointer to find a negative number
            while (left <= right && arr[right] >= 0) {
                right--;
            }

            // Swap elements if left pointer is still less than or equal to right pointer
            if (left <= right) {
                swap(arr, left, right);
                left++;
                right--;
            }
        }
    }

    public static void swap(int[] arr, int i, int j) {
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
        System.out.println("Swapped " + arr[i] + " with " + arr[j]);
        System.out.println("Current Array: " + Arrays.toString(arr));
    }
}
